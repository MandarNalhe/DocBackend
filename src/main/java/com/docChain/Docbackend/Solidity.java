/*
package com.docChain.Docbackend;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;

import org.springframework.stereotype.Component;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

*/
/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/hyperledger/web3j/tree/main/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 1.6.1.
 *//*
@Component
@SuppressWarnings("rawtypes")
public class Solidity extends Contract {
    public static final String BINARY = "{\r\n"
            + "\t\"functionDebugData\": {},\r\n"
            + "\t\"generatedSources\": [],\r\n"
            + "\t\"linkReferences\": {},\r\n"
            + "\t\"object\": \"6080604052348015600e575f80fd5b506106e38061001c5f395ff3fe608060405234801561000f575f80fd5b506004361061003f575f3560e01c806320b28ade146100435780634e31ad9d14610061578063c623674f1461007d575b5f80fd5b61004b61009b565b6040516100589190610237565b60405180910390f35b61007b60048036038101906100769190610394565b61012a565b005b61008561013c565b6040516100929190610237565b60405180910390f35b60605f80546100a990610408565b80601f01602080910402602001604051908101604052809291908181526020018280546100d590610408565b80156101205780601f106100f757610100808354040283529160200191610120565b820191905f5260205f20905b81548152906001019060200180831161010357829003601f168201915b5050505050905090565b805f908161013891906105de565b5050565b5f805461014890610408565b80601f016020809104026020016040519081016040528092919081815260200182805461017490610408565b80156101bf5780601f10610196576101008083540402835291602001916101bf565b820191905f5260205f20905b8154815290600101906020018083116101a257829003601f168201915b505050505081565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610209826101c7565b61021381856101d1565b93506102238185602086016101e1565b61022c816101ef565b840191505092915050565b5f6020820190508181035f83015261024f81846101ff565b905092915050565b5f604051905090565b5f80fd5b5f80fd5b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6102a6826101ef565b810181811067ffffffffffffffff821117156102c5576102c4610270565b5b80604052505050565b5f6102d7610257565b90506102e3828261029d565b919050565b5f67ffffffffffffffff82111561030257610301610270565b5b61030b826101ef565b9050602081019050919050565b828183375f83830152505050565b5f610338610333846102e8565b6102ce565b9050828152602081018484840111156103545761035361026c565b5b61035f848285610318565b509392505050565b5f82601f83011261037b5761037a610268565b5b813561038b848260208601610326565b91505092915050565b5f602082840312156103a9576103a8610260565b5b5f82013567ffffffffffffffff8111156103c6576103c5610264565b5b6103d284828501610367565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061041f57607f821691505b602082108103610432576104316103db565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026104947fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610459565b61049e8683610459565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6104e26104dd6104d8846104b6565b6104bf565b6104b6565b9050919050565b5f819050919050565b6104fb836104c8565b61050f610507826104e9565b848454610465565b825550505050565b5f90565b610523610517565b61052e8184846104f2565b505050565b5b81811015610551576105465f8261051b565b600181019050610534565b5050565b601f8211156105965761056781610438565b6105708461044a565b8101602085101561057f578190505b61059361058b8561044a565b830182610533565b50505b505050565b5f82821c905092915050565b5f6105b65f198460080261059b565b1980831691505092915050565b5f6105ce83836105a7565b9150826002028217905092915050565b6105e7826101c7565b67ffffffffffffffff811115610600576105ff610270565b5b61060a8254610408565b610615828285610555565b5f60209050601f831160018114610646575f8415610634578287015190505b61063e85826105c3565b8655506106a5565b601f19841661065486610438565b5f5b8281101561067b57848901518255600182019150602085019450602081019050610656565b868310156106985784890151610694601f8916826105a7565b8355505b6001600288020188555050505b50505050505056fea2646970667358221220aeb6043b04425553c2e8f6f54acd808105a2cbb66bf77668dc6053719e4afb4164736f6c634300081a0033\",\r\n"
            + "\t\"opcodes\": \"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x6E3 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x20B28ADE EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x4E31AD9D EQ PUSH2 0x61 JUMPI DUP1 PUSH4 0xC623674F EQ PUSH2 0x7D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x4B PUSH2 0x9B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x237 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x76 SWAP2 SWAP1 PUSH2 0x394 JUMP JUMPDEST PUSH2 0x12A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x85 PUSH2 0x13C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x92 SWAP2 SWAP1 PUSH2 0x237 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH0 DUP1 SLOAD PUSH2 0xA9 SWAP1 PUSH2 0x408 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xD5 SWAP1 PUSH2 0x408 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x120 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xF7 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x120 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x103 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH0 SWAP1 DUP2 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x5DE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH2 0x148 SWAP1 PUSH2 0x408 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x174 SWAP1 PUSH2 0x408 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1BF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x196 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1BF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1A2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x209 DUP3 PUSH2 0x1C7 JUMP JUMPDEST PUSH2 0x213 DUP2 DUP6 PUSH2 0x1D1 JUMP JUMPDEST SWAP4 POP PUSH2 0x223 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1E1 JUMP JUMPDEST PUSH2 0x22C DUP2 PUSH2 0x1EF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x24F DUP2 DUP5 PUSH2 0x1FF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2A6 DUP3 PUSH2 0x1EF JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2C5 JUMPI PUSH2 0x2C4 PUSH2 0x270 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2D7 PUSH2 0x257 JUMP JUMPDEST SWAP1 POP PUSH2 0x2E3 DUP3 DUP3 PUSH2 0x29D JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x302 JUMPI PUSH2 0x301 PUSH2 0x270 JUMP JUMPDEST JUMPDEST PUSH2 0x30B DUP3 PUSH2 0x1EF JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x338 PUSH2 0x333 DUP5 PUSH2 0x2E8 JUMP JUMPDEST PUSH2 0x2CE JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x354 JUMPI PUSH2 0x353 PUSH2 0x26C JUMP JUMPDEST JUMPDEST PUSH2 0x35F DUP5 DUP3 DUP6 PUSH2 0x318 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x37B JUMPI PUSH2 0x37A PUSH2 0x268 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x38B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x326 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3A9 JUMPI PUSH2 0x3A8 PUSH2 0x260 JUMP JUMPDEST JUMPDEST PUSH0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3C6 JUMPI PUSH2 0x3C5 PUSH2 0x264 JUMP JUMPDEST JUMPDEST PUSH2 0x3D2 DUP5 DUP3 DUP6 ADD PUSH2 0x367 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x41F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x432 JUMPI PUSH2 0x431 PUSH2 0x3DB JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x494 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x459 JUMP JUMPDEST PUSH2 0x49E DUP7 DUP4 PUSH2 0x459 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x4E2 PUSH2 0x4DD PUSH2 0x4D8 DUP5 PUSH2 0x4B6 JUMP JUMPDEST PUSH2 0x4BF JUMP JUMPDEST PUSH2 0x4B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4FB DUP4 PUSH2 0x4C8 JUMP JUMPDEST PUSH2 0x50F PUSH2 0x507 DUP3 PUSH2 0x4E9 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x465 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x523 PUSH2 0x517 JUMP JUMPDEST PUSH2 0x52E DUP2 DUP5 DUP5 PUSH2 0x4F2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x551 JUMPI PUSH2 0x546 PUSH0 DUP3 PUSH2 0x51B JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x534 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x596 JUMPI PUSH2 0x567 DUP2 PUSH2 0x438 JUMP JUMPDEST PUSH2 0x570 DUP5 PUSH2 0x44A JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x57F JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x593 PUSH2 0x58B DUP6 PUSH2 0x44A JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x533 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5B6 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x59B JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x5CE DUP4 DUP4 PUSH2 0x5A7 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5E7 DUP3 PUSH2 0x1C7 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x600 JUMPI PUSH2 0x5FF PUSH2 0x270 JUMP JUMPDEST JUMPDEST PUSH2 0x60A DUP3 SLOAD PUSH2 0x408 JUMP JUMPDEST PUSH2 0x615 DUP3 DUP3 DUP6 PUSH2 0x555 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x646 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x634 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x63E DUP6 DUP3 PUSH2 0x5C3 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x6A5 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x654 DUP7 PUSH2 0x438 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x67B JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x656 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x698 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x694 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x5A7 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAE 0xB6 DIV EXTCODESIZE DIV TIMESTAMP SSTORE MSTORE8 0xC2 0xE8 0xF6 CREATE2 BLOBBASEFEE 0xCD DUP1 DUP2 SDIV LOG2 0xCB 0xB6 PUSH12 0xF77668DC6053719E4AFB4164 PUSH20 0x6F6C634300081A00330000000000000000000000 \",\r\n"
            + "\t\"sourceMap\": \"58:343:0:-:0;;;;;;;;;;;;;;;;;;;\"\r\n"
            + "}";

    private static String librariesLinkedBinary;

    public static final String FUNC_STOREIPFSHASH = "storeIPFSHash";

    public static final String FUNC_GETIPFSHASH = "getIPFSHash";

    public static final String FUNC_IPFSHASH = "ipfsHash";

    @Deprecated
    protected Solidity(String contractAddress, Web3j web3j, Credentials credentials,
            BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected Solidity(String contractAddress, Web3j web3j, Credentials credentials,
            ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected Solidity(String contractAddress, Web3j web3j, TransactionManager transactionManager,
            BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected Solidity(String contractAddress, Web3j web3j, TransactionManager transactionManager,
            ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public RemoteFunctionCall<TransactionReceipt> storeIPFSHash(String _ipfsHash) {
        final Function function = new Function(
                FUNC_STOREIPFSHASH, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_ipfsHash)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<String> getIPFSHash() {
        final Function function = new Function(FUNC_GETIPFSHASH, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<String> ipfsHash() {
        final Function function = new Function(FUNC_IPFSHASH, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    @Deprecated
    public static Solidity load(String contractAddress, Web3j web3j, Credentials credentials,
            BigInteger gasPrice, BigInteger gasLimit) {
        return new Solidity(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static Solidity load(String contractAddress, Web3j web3j,
            TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new Solidity(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static Solidity load(String contractAddress, Web3j web3j, Credentials credentials,
            ContractGasProvider contractGasProvider) {
        return new Solidity(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static Solidity load(String contractAddress, Web3j web3j,
            TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new Solidity(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<Solidity> deploy(Web3j web3j, Credentials credentials,
            ContractGasProvider contractGasProvider) {
        return deployRemoteCall(Solidity.class, web3j, credentials, contractGasProvider, getDeploymentBinary(), "");
    }

    @Deprecated
    public static RemoteCall<Solidity> deploy(Web3j web3j, Credentials credentials,
            BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Solidity.class, web3j, credentials, gasPrice, gasLimit, getDeploymentBinary(), "");
    }

    public static RemoteCall<Solidity> deploy(Web3j web3j, TransactionManager transactionManager,
            ContractGasProvider contractGasProvider) {
        return deployRemoteCall(Solidity.class, web3j, transactionManager, contractGasProvider, getDeploymentBinary(), "");
    }

    @Deprecated
    public static RemoteCall<Solidity> deploy(Web3j web3j, TransactionManager transactionManager,
            BigInteger gasPrice, BigInteger gasLimit) {
        return deployRemoteCall(Solidity.class, web3j, transactionManager, gasPrice, gasLimit, getDeploymentBinary(), "");
    }

    */
/*public static void linkLibraries(List<Contract.LinkReference> references) {
        librariesLinkedBinary = linkBinaryWithReferences(BINARY, references);
    }*//*


    private static String getDeploymentBinary() {
        if (librariesLinkedBinary != null) {
            return librariesLinkedBinary;
        } else {
            return BINARY;
        }
    }
}
*/
